{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\directive\\waves\\waves.js","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\directive\\waves\\waves.js","mtime":1555241033448},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555040407437},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1550018570393}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _assign = _interopRequireDefault(require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\"));\n\nrequire(\"./waves.css\");\n\nvar context = '@@wavesContext';\n\nfunction handleClick(el, binding) {\n  function handle(e) {\n    var customOpts = (0, _assign.default)({}, binding.value);\n    var opts = (0, _assign.default)({\n      ele: el,\n      // 波纹作用元素\n      type: 'hit',\n      // hit 点击位置扩散 center中心点扩展\n      color: 'rgba(0, 0, 0, 0.15)' // 波纹颜色\n\n    }, customOpts);\n    var target = opts.ele;\n\n    if (target) {\n      target.style.position = 'relative';\n      target.style.overflow = 'hidden';\n      var rect = target.getBoundingClientRect();\n      var ripple = target.querySelector('.waves-ripple');\n\n      if (!ripple) {\n        ripple = document.createElement('span');\n        ripple.className = 'waves-ripple';\n        ripple.style.height = ripple.style.width = Math.max(rect.width, rect.height) + 'px';\n        target.appendChild(ripple);\n      } else {\n        ripple.className = 'waves-ripple';\n      }\n\n      switch (opts.type) {\n        case 'center':\n          ripple.style.top = rect.height / 2 - ripple.offsetHeight / 2 + 'px';\n          ripple.style.left = rect.width / 2 - ripple.offsetWidth / 2 + 'px';\n          break;\n\n        default:\n          ripple.style.top = (e.pageY - rect.top - ripple.offsetHeight / 2 - document.documentElement.scrollTop || document.body.scrollTop) + 'px';\n          ripple.style.left = (e.pageX - rect.left - ripple.offsetWidth / 2 - document.documentElement.scrollLeft || document.body.scrollLeft) + 'px';\n      }\n\n      ripple.style.backgroundColor = opts.color;\n      ripple.className = 'waves-ripple z-active';\n      return false;\n    }\n  }\n\n  if (!el[context]) {\n    el[context] = {\n      removeHandle: handle\n    };\n  } else {\n    el[context].removeHandle = handle;\n  }\n\n  return handle;\n}\n\nvar _default = {\n  bind: function bind(el, binding) {\n    el.addEventListener('click', handleClick(el, binding), false);\n  },\n  update: function update(el, binding) {\n    el.removeEventListener('click', el[context].removeHandle, false);\n    el.addEventListener('click', handleClick(el, binding), false);\n  },\n  unbind: function unbind(el) {\n    el.removeEventListener('click', el[context].removeHandle, false);\n    el[context] = null;\n    delete el[context];\n  }\n};\nexports.default = _default;",null]}