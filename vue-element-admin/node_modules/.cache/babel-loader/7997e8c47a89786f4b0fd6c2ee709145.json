{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\store\\modules\\user.js","mtime":1555468461392},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555468404974},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1555468400994}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _promise = _interopRequireDefault(require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project1\\\\manage-vue-ele\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar state = {\n  token: (0, _auth.getToken)(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function () {\n    var _login2 = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, userInfo) {\n      var commit, username, password, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              username = userInfo.username, password = userInfo.password;\n              _context.next = 4;\n              return (0, _user.login)({\n                user_name: username,\n                user_pwd: password\n              });\n\n            case 4:\n              res = _context.sent;\n              console.log('res...', res);\n              (0, _auth.setToken)(res.token);\n              return _context.abrupt(\"return\", res);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function login(_x, _x2) {\n      return _login2.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new _promise.default(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var roles = data.roles,\n            name = data.name,\n            avatar = data.avatar,\n            introduction = data.introduction; // roles must be a non-empty array\n\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!');\n        }\n\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_INTRODUCTION', introduction);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new _promise.default(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new _promise.default(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // Dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new _promise.default(\n    /*#__PURE__*/\n    function () {\n      var _ref6 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(resolve) {\n        var token, _ref7, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context2.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _ref7 = _context2.sent;\n                roles = _ref7.roles;\n                (0, _router.resetRouter)(); // generate accessible routes map based on roles\n\n                _context2.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context2.sent;\n\n                // dynamically add accessible routes\n                _router.default.addRoutes(accessRoutes);\n\n                resolve();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}