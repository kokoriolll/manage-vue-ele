{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\views\\exam\\examination\\addmination.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\views\\exam\\examination\\addmination.vue","mtime":1555547681936},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555468404974},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1555468400994},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555468404974},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1555468458169}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState, mapMutations, mapActions } from \"vuex\";\r\nvar moment = require(\"moment\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      num: \"\",\r\n      ruleForm: {\r\n        name: \"\",\r\n        region: \"\",\r\n        date1: \"\",\r\n        date2: \"\",\r\n        delivery: false\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: \"请输入试卷名称\", trigger: \"blur\" }],\r\n        type: [{ required: true, message: \"请选择考试类型\", trigger: \"blur\" }],\r\n        region: [{ required: true, message: \"请选择课程\", trigger: \"blur\" }],\r\n        Topic: [{ required: true, message: \"请选择题量\", trigger: \"blur\" }],\r\n        date1: [\r\n          {\r\n            type: \"date\",\r\n            required: true,\r\n            message: \"请选择日期\",\r\n            trigger: \"change\"\r\n          }\r\n        ],\r\n        date2: [\r\n          {\r\n            type: \"date\",\r\n            required: true,\r\n            message: \"请选择时间\",\r\n            trigger: \"change\"\r\n          }\r\n        ]\r\n      },\r\n      createExamParams: {},\r\n      ClassTypeID: \"\",\r\n      SubjectID: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      ClassTypeState: state => {\r\n        return state.examination.ClassTypeData;\r\n      },\r\n      SubjectState: state => {\r\n        return state.examination.SubjectData;\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      ClassTypeSave: \"examination/getClassType\",\r\n      SubjectSave: \"examination/getSubject\"\r\n    }),\r\n    ...mapActions({\r\n      CreateExam: \"examination/CreateExam\",\r\n      ClassType: \"examination/ClassType\",\r\n      Subject: \"examination/Subject\"\r\n    }),\r\n    // getLocalTime(nS) {\r\n    //   return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\r\n    // },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        const dataTime1 = moment(this.ruleForm.date1).unix();\r\n        const dataTime2 = moment(this.ruleForm.date2).unix();\r\n        if (valid) {\r\n          const localstorage = window.localStorage;\r\n          let res = await this.CreateExam({\r\n            subject_id: this.SubjectID,\r\n            exam_id: this.ClassTypeID,\r\n            title: this.ruleForm.name,\r\n            number: this.ruleForm.Topic,\r\n            start_time: dataTime1,\r\n            end_time: dataTime2\r\n          });\r\n          console.log(res);\r\n          window.localStorage.setItem(\"CreateExam\", JSON.stringify(res));\r\n          //this.$router.push({ path: \"/examination/newExam\" });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    handleChange(e) {\r\n      this.ClassTypeID = e;\r\n    },\r\n    handleSub(e) {\r\n      this.SubjectID = e;\r\n    }\r\n  },\r\n  created() {\r\n    this.ClassType();\r\n    this.Subject();\r\n  }\r\n};\r\n",null]}