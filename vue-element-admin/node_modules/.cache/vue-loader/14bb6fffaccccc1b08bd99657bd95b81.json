{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\src\\views\\login\\index.vue","mtime":1555469137069},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555468404974},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1555468400994},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555468404974},{"path":"C:\\Users\\ASUS\\Desktop\\project1\\manage-vue-ele\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1555468458169}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { validUsername } from '@/utils/validate'\r\nimport LangSelect from '@/components/LangSelect'\r\nimport SocialSign from './socialSignin'\r\nimport {mapActions} from 'vuex'\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  components: { LangSelect, SocialSign },\r\n  data() {\r\n    const validateUsername = ( rules,value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('Please enter the correct user name'))\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    const validatePassword = (rules, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error(\"The password can not be less than 6 digits\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      loginForm: {\r\n        username: 'chengjy',\r\n        password: 'Chengjianye1997!'\r\n      },\r\n      loginRules: {\r\n        username: [{ required: true, trigger: 'blur'},{trigger: 'blur',validator: validateUsername }],\r\n        password: [{ required: true, trigger: 'blur', validator: validatePassword }]\r\n      },\r\n      passwordType: \"password\",\r\n      capsTooltip: false,\r\n      loading: false,\r\n      showDialog: false,\r\n      redirect: undefined\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect;\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    // window.addEventListener('storage', this.afterQRScan)\r\n  },\r\n  mounted() {\r\n    if (this.loginForm.username === \"\") {\r\n      this.$refs.username.focus();\r\n    } else if (this.loginForm.password === \"\") {\r\n      this.$refs.password.focus();\r\n    }\r\n  },\r\n  destroyed() {\r\n    // window.removeEventListener('storage', this.afterQRScan)\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      login:'login/login',\r\n      generateRoutes:'permission/generateRoutes'\r\n    }),\r\n    showPwd() {\r\n      if (this.passwordType === \"password\") {\r\n        this.passwordType = \"\";\r\n      } else {\r\n        this.passwordType = \"password\";\r\n      }\r\n      this.$nextTick(() => {\r\n        this.$refs.password.focus();\r\n      });\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          let res = await this.login({\r\n            user_name:this.loginForm.username,\r\n            user_pwd:this.loginForm.password\r\n          })\r\n          if(res.code == 1){\r\n            await this.generateRoutes([]);\r\n            this.$router.push({ path: this.redirect || '/' })\r\n          }\r\n          this.loading = false;\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}